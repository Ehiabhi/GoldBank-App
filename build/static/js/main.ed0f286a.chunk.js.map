{"version":3,"sources":["components/Login.js","components/SignUp.js","redux/actionTypes.js","redux/reducers/initialState.js","redux/actions/actions.js","components/utils.js","components/AccountDashboard.js","components/SendMoney.js","components/MainPage.js","components/App.js","redux/reducers/index.js","redux/reducers/clientreducers.js","redux/reducers/clientListReducer.js","index.js","redux/configureStore.js"],"names":["withRouter","login","history","useState","accountNumber","password","loginFormData","setLoginFormData","logIn","e","a","preventDefault","then","status","success","push","toast","catch","err","Error","message","text","alert","handleInputChange","target","name","value","prevState","onSubmit","className","type","min","placeholder","fullName","onChange","required","to","SignUp","signup","contact","gender","confirmPassword","signupFormData","setSignupFormData","goToLogin","setGoToLogin","hidden","GET_CLIENT_INFO","GET_CLIENT_LIST","REMOVE_CLIENT_LIST","initialClientState","accountBalance","lastloggedIn","_id","transactionHistory","initialClientList","updateClientData","data","actionTypes","payload","postTransferMoney","transferdata","dispatch","fetch","method","headers","Accept","body","JSON","stringify","response","ok","console","log","error","statusText","json","greeting","currentHour","Date","getHours","setAuthHeader","localStorage","getItem","info","logout","customerInfo","setCustomerInfo","routeToSendMoney","setRouteToSendMoney","useEffect","onClick","document","getElementById","style","display","h","length","innerHTML","h2","createElement","appendChild","forEach","entry","index","dateformat","Type","AcctNum","Amount","Narration","d","debitArray","filter","c","creditArray","id","SendMoney","senderInfo","sendMoney","viewUsersList","usersList","benAcctNum","benFullName","amount","narration","transferFormData","setTransferFormData","goToDashboard","setGoToDashboard","list","readOnly","autoClose","dataToSend","senderId","receipient","createBrowserHistory","connect","state","loggedInClient","updateClientListDataReducer","formData","res","setItem","authToken","errmess","Authorization","removeItem","viewUserList","position","hideProgressBar","path","component","clientData","exact","App","rootReducer","combineReducers","action","store","initialStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","user_token","currentPath","location","pathname","profile","origin","maintainSession","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ed0f286a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Login({ login, history }) {\r\n  const [loginFormData, setLoginFormData] = useState({\r\n    accountNumber: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  \r\n  const logIn = async (e) => {\r\n    e.preventDefault();\r\n    login(loginFormData)\r\n      .then((status) => {\r\n        if (status.success) {\r\n          history.push(\"/accoutDashBoard\");\r\n          toast.success(\"Login successful.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        let mes = new Error();\r\n        mes.message = err.text;\r\n        alert(err);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setLoginFormData((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Welcome To Gold Bank.</h1>\r\n      <h2>Kindly input your login details to sign in</h2>\r\n      <form onSubmit={logIn}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"accountNumber\"\r\n            min=\"0\"\r\n            className=\"form-control\"\r\n            placeholder=\"Account/Phone Number\"\r\n            value={loginFormData.fullName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            value={loginFormData.fullName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"action-items\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Login\r\n          </button>\r\n          <Link className=\"btn btn-outline-primary\" to={\"/signup\"}>\r\n            Sign Up\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nexport default function SignUp({ signup }) {\r\n  const [signupFormData, setSignupFormData] = useState({\r\n    fullName: \"\",\r\n    contact: \"\",\r\n    gender: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [goToLogin, setGoToLogin] = useState(false);\r\n\r\n  const signUp = (e) => {\r\n    e.preventDefault();\r\n    if (signupFormData.password !== signupFormData.confirmPassword) {\r\n      alert(\"Passwords do not match\");\r\n      return false;\r\n    }\r\n    signup(signupFormData)\r\n      .then((status) => {\r\n        setGoToLogin(status);\r\n      })\r\n      .catch((err) => {\r\n        let mes = new Error();\r\n        mes.message = err.text;\r\n        alert(err);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setSignupFormData((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {goToLogin && <Redirect to=\"/login\" />}\r\n      <h1>Welcome</h1>\r\n      <h2>Kindly sign up to own an account with us today.</h2>\r\n      <form onSubmit={signUp}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"fullName\"\r\n            className=\"form-control\"\r\n            placeholder=\"Full Name\"\r\n            value={signupFormData.fullName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"contact\"\r\n            className=\"form-control\"\r\n            placeholder=\"Phone Number\"\r\n            value={signupFormData.contact}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"gender\"\r\n            value={signupFormData.gender}\r\n            onChange={handleInputChange}\r\n            required\r\n          >\r\n            {/* Used to create a placeholder for the select element. */}\r\n            <option value=\"\" hidden>\r\n              Select a gender\r\n            </option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">Female</option>\r\n            <option value=\"undisclosed\">Prefer not to say</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            value={signupFormData.password}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            className=\"form-control\"\r\n            placeholder=\"Confirm Password\"\r\n            value={signupFormData.confirmPassword}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"action-items\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Sign Up\r\n          </button>\r\n          <Link className=\"btn btn-outline-primary\" to={\"/login\"}>\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","export const GET_CLIENT_INFO = \"GET_CLIENT_INFO\";\r\nexport const SET_SENDER_INFO = \"SET_SENDER_INFO\";\r\nexport const GET_CLIENT_LIST = \"GET_CLIENT_LIST\";\r\nexport const REMOVE_CLIENT_LIST = \"REMOVE_CLIENT_LIST\";\r\n","export const initialClientState = {\r\n  accountBalance: null,\r\n  accountNumber: null,\r\n  fullName: null,\r\n  gender: null,\r\n  lastloggedIn: null,\r\n  _id: null,\r\n  transactionHistory: [],\r\n};\r\n\r\nexport const initialClientList = [];\r\n","import * as actionTypes from \"../actionTypes\";\r\nimport { setAuthHeader } from \"../../components/utils\";\r\nimport { initialClientState } from \"../reducers/initialState\";\r\n\r\nexport function updateClientData(data) {\r\n  return { type: actionTypes.GET_CLIENT_INFO, payload: data };\r\n}\r\n\r\nexport function updateClientList(data) {\r\n  return { type: actionTypes.GET_CLIENT_LIST, payload: data };\r\n}\r\n\r\nexport function removeClientList() {\r\n  return { type: actionTypes.REMOVE_CLIENT_LIST };\r\n}\r\n\r\nexport const postLogin = (formData) => (dispatch) => {\r\n  return fetch(\"/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(formData),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\"Error: \" + response.statusText);\r\n        throw error;\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((res) => {\r\n      localStorage.setItem(\"user_token\", res.authToken);\r\n      dispatch(updateClientData(res));\r\n      return { success: true };\r\n    })\r\n    .catch((error) => {\r\n      var errmess = new Error(error.message);\r\n      alert(errmess);\r\n      return { success: false };\r\n    });\r\n};\r\n\r\nexport const postTransferMoney = (transferdata) => (dispatch) => {\r\n  return fetch(\"/transfer\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(transferdata),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\r\n          \"Error \" + response.status + \": \" + response.statusText\r\n        );\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      dispatch(updateClientData(data));\r\n      dispatch(removeClientList());\r\n      return true;\r\n    })\r\n    .catch((error) => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n    });\r\n};\r\n\r\nexport const postSignUp = (formData) => (dispatch) => {\r\n  return fetch(\"/signup\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(formData),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return true;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\"Error: \" + response.statusText);\r\n        throw error;\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      var errmess = new Error(err.message);\r\n      throw errmess;\r\n    });\r\n};\r\n\r\nexport const postLogout = () => (dispatch) => {\r\n  return fetch(\"/logout\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + setAuthHeader(),\r\n    },\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\"Error: \" + response.statusText);\r\n        throw error;\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((res) => {\r\n      localStorage.removeItem(\"user_token\");\r\n      dispatch(updateClientData(initialClientState));\r\n      return { success: true };\r\n    })\r\n    .catch((error) => {\r\n      var errmess = new Error(error.message);\r\n      alert(errmess);\r\n      return { success: false };\r\n    });\r\n};\r\n\r\nexport const initiateGetProfile = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(\"/getProfile\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + setAuthHeader(),\r\n        },\r\n      });\r\n      const profile = await response.json();\r\n      dispatch(updateClientData(profile));\r\n    } catch (error) {\r\n      var errmess = new Error(error.message);\r\n      alert(errmess);\r\n    }\r\n  };\r\n};\r\n\r\nexport const viewRegisteredUsers = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(\"/viewRegisteredUsers\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const usersList = await response.json();\r\n      dispatch(updateClientList(usersList));\r\n    } catch (error) {\r\n      var errmess = new Error(error.message);\r\n      alert(errmess);\r\n    }\r\n  };\r\n};\r\n","// import jwt_decode from \"jwt-decode\";\r\nimport { history } from \"./MainPage\";\r\nimport { initiateGetProfile } from \"../redux/actions/actions\";\r\nimport { store } from \"../index\";\r\n\r\nexport function greeting() {\r\n  const currentHour = new Date().getHours();\r\n  if (currentHour < 12 || currentHour === 0) {\r\n    return \"Good morning\";\r\n  } else if (currentHour < 16) {\r\n    return \"Good afternoon\";\r\n  } else {\r\n    return \"Good evening\";\r\n  }\r\n}\r\n\r\nexport const maintainSession = () => {\r\n  const user_token = localStorage.getItem(\"user_token\");\r\n  const currentPath = window.location.pathname;\r\n  if (user_token) {\r\n    store.dispatch(initiateGetProfile());\r\n    if (currentPath === \"/accoutDashBoard\" || currentPath === \"/sendMoney\") {\r\n      history.push(window.location.origin + currentPath);\r\n    } else {\r\n      history.push(window.location.origin + \"/accoutDashBoard\");\r\n    }\r\n  } else {\r\n    history.push(window.location.origin + \"/\");\r\n  }\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  return token;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { greeting } from \"./utils\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport dateformat from \"dateformat\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Dashboard({ info, history, logout }) {\r\n  const [customerInfo, setCustomerInfo] = useState({\r\n    accountBalance: null,\r\n    accountNumber: null,\r\n    fullName: null,\r\n    gender: null,\r\n    lastloggedIn: null,\r\n    _id: null,\r\n  });\r\n  const [routeToSendMoney, setRouteToSendMoney] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCustomerInfo(info);\r\n  }, [info]);\r\n\r\n  const handleSendMoney = () => {\r\n    setRouteToSendMoney(true);\r\n  };\r\n\r\n  const handleLogOut = () => {\r\n    logout();\r\n    history.push(\"/\");\r\n    toast.success(\"You've been logged out successfully.\");\r\n  };\r\n\r\n  const fetchDebitTransaction = () => {\r\n    document.getElementById(\"transactHistory\").style.display = \"none\";\r\n    document.getElementById(\"transactHistoryCredit\").style.display = \"none\";\r\n\r\n    let d = document.getElementById(\"transactHistoryDebit\");\r\n    d.style.display = \"block\";\r\n    let debitArray = info.transactionHistory.filter(\r\n      (entry) => entry.Type === \"Transaction type: Dr\"\r\n    );\r\n    if (debitArray.length === 0) {\r\n      if (d.innerHTML === \"\") {\r\n        d.innerHTML = \"There are no entries to display.\";\r\n        return;\r\n      }\r\n      return false;\r\n    } else {\r\n      if (\r\n        d.innerHTML === \"\" ||\r\n        d.innerHTML === \"There are no entries to display.\"\r\n      ) {\r\n        const h2 = document.createElement(\"h2\");\r\n        h2.innerHTML = \"Debit Transactions\";\r\n        d.appendChild(h2);\r\n        debitArray.forEach((entry, index) => {\r\n          d.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n              <ul class=\"list-group transactionList\">\r\n                <li class=\"list-group-item\">${dateformat(\r\n                  entry.Date,\r\n                  \"dd/mmm/yyyy HH:MM\"\r\n                )}</li>\r\n                <li class=\"list-group-item\">${entry.Type}</li>\r\n                <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n                <li class=\"list-group-item\">${entry.Amount}</li>\r\n                <li class=\"list-group-item\">${entry.Narration}</li>\r\n              </ul>\r\n            </div>\r\n            `;\r\n        });\r\n        return;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchCreditTransaction = () => {\r\n    document.getElementById(\"transactHistory\").style.display = \"none\";\r\n    document.getElementById(\"transactHistoryDebit\").style.display = \"none\";\r\n\r\n    let c = document.getElementById(\"transactHistoryCredit\");\r\n    c.style.display = \"block\";\r\n    let creditArray = info.transactionHistory.filter(\r\n      (entry) => entry.Type === \"Transaction type: Cr\"\r\n    );\r\n    if (creditArray.length === 0) {\r\n      if (c.innerHTML === \"\") {\r\n        c.innerHTML = \"There are no entries to display.\";\r\n        return;\r\n      }\r\n      return false;\r\n    } else {\r\n      if (\r\n        c.innerHTML === \"\" ||\r\n        c.innerHTML === \"There are no entries to display.\"\r\n      ) {\r\n        const h2 = document.createElement(\"h2\");\r\n        h2.innerHTML = \"Credit Transactions\";\r\n        c.appendChild(h2);\r\n        creditArray.forEach((entry, index) => {\r\n          c.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n              <ul class=\"list-group transactionList\">\r\n                <li class=\"list-group-item\">${dateformat(\r\n                  entry.Date,\r\n                  \"dd/mmm/yyyy HH:MM\"\r\n                )}</li>\r\n                <li class=\"list-group-item\">${entry.Type}</li>\r\n                <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n                <li class=\"list-group-item\">${entry.Amount}</li>\r\n                <li class=\"list-group-item\">${entry.Narration}</li>\r\n              </ul>\r\n            </div>\r\n            `;\r\n        });\r\n        return;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchTransactionHistory = () => {\r\n    document.getElementById(\"transactHistoryDebit\").style.display = \"none\";\r\n    document.getElementById(\"transactHistoryCredit\").style.display = \"none\";\r\n\r\n    let h = document.getElementById(\"transactHistory\");\r\n    h.style.display = \"block\";\r\n    if (info.transactionHistory.length === 0) {\r\n      if (h.innerHTML === \"\") {\r\n        h.innerHTML = \"There are no entries to display.\";\r\n        return;\r\n      }\r\n      return false;\r\n    } else {\r\n      if (\r\n        h.innerHTML === \"\" ||\r\n        h.innerHTML === \"There are no entries to display.\"\r\n      ) {\r\n        const h2 = document.createElement(\"h2\");\r\n        h2.innerHTML = \"Transaction History\";\r\n        h.appendChild(h2);\r\n        info.transactionHistory.forEach((entry, index) => {\r\n          h.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n              <ul class=\"list-group transactionList\">\r\n                <li class=\"list-group-item\">${dateformat(\r\n                  entry.Date,\r\n                  \"dd/mmm/yyyy HH:MM\"\r\n                )}</li>\r\n                <li class=\"list-group-item\">${entry.Type}</li>\r\n                <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n                <li class=\"list-group-item\">${entry.Amount}</li>\r\n                <li class=\"list-group-item\">${entry.Narration}</li>\r\n              </ul>\r\n            </div>\r\n            `;\r\n        });\r\n        return;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {routeToSendMoney && <Redirect to=\"/sendMoney\" />}\r\n      <h1>Gold Bank</h1>\r\n      <h2>\r\n        {greeting()}, {customerInfo.fullName}\r\n      </h2>\r\n      {/* <p>\r\n        Last Logged In:{\" \"}\r\n        <b>{dateformat(customerInfo.lastloggedIn, \"dd/mmm/yyyy HH:MM:ss\")}</b>\r\n      </p> */}\r\n      <p>\r\n        Account #<b>{customerInfo.accountNumber}</b>\r\n      </p>\r\n      <h3>\r\n        Account Balance: =N= <b>{customerInfo.accountBalance}</b>\r\n      </h3>\r\n      <button className=\"btn btn-primary\" onClick={handleSendMoney}>\r\n        Send Money\r\n      </button>\r\n      <br />\r\n      <br />\r\n      <button className=\"btn btn-primary\" onClick={fetchTransactionHistory}>\r\n        View Account Statement\r\n      </button>\r\n      &nbsp;\r\n      <button className=\"btn btn-primary\" onClick={fetchDebitTransaction}>\r\n        View All Debit Transaction\r\n      </button>\r\n      &nbsp;\r\n      <button className=\"btn btn-primary\" onClick={fetchCreditTransaction}>\r\n        View All Credit Transaction\r\n      </button>\r\n      &nbsp;\r\n      <button className=\"btn btn-danger\" onClick={handleLogOut}>\r\n        Log out\r\n      </button>\r\n      <br />\r\n      <br />\r\n      <div id=\"transactHistory\"></div>\r\n      <div id=\"transactHistoryDebit\"></div>\r\n      <div id=\"transactHistoryCredit\"></div>\r\n      {/* <button className=\"btn btn-primary\" onClick={handleLogOut}>\r\n        Log out\r\n      </button> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function SendMoney({\r\n  senderInfo,\r\n  sendMoney,\r\n  viewUsersList,\r\n  usersList,\r\n}) {\r\n  const [transferFormData, setTransferFormData] = useState({\r\n    benAcctNum: \"\",\r\n    benFullName: \"\",\r\n    amount: \"\",\r\n    narration: \"\",\r\n  });\r\n  const [goToDashboard, setGoToDashboard] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const list = document.getElementById(\"usersList\");\r\n    list.innerHTML = \"\";\r\n    if (usersList.length !== 0) {\r\n      usersList.forEach((entry, index) => {\r\n        list.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n            <ul class=\"list-group transactionList\">\r\n              <li class=\"list-group-item\">Name: ${entry.name}</li>\r\n              <li class=\"list-group-item\">AccountNumber: ${entry.accountNumber}</li>\r\n            </ul>\r\n          </div>\r\n          `;\r\n      });\r\n      list.style.display = \"block\";\r\n    } else {\r\n      list.style.display = \"none\";\r\n    }\r\n  }, [usersList]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    setTransferFormData((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  const TransferMoney = (e) => {\r\n    e.preventDefault();\r\n    if (transferFormData.benAcctNum === \"\" || transferFormData.amount === \"\") {\r\n      toast.error(\"Beneficiary name and amount cannot be empty.\", {\r\n        autoClose: 6000,\r\n      });\r\n      return false;\r\n    }\r\n    if (senderInfo.accountBalance < transferFormData.amount) {\r\n      alert(\"Insufficient funds\");\r\n      return false;\r\n    }\r\n    const dataToSend = {\r\n      senderId: senderInfo._id,\r\n      receipient: { ...transferFormData },\r\n    };\r\n    const status = sendMoney(dataToSend);\r\n    if (status) {\r\n      toast.success(\"Transfer Successful\");\r\n      setGoToDashboard(true);\r\n    }\r\n  };\r\n\r\n  const viewList = () => {\r\n    viewUsersList();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {goToDashboard && <Redirect to=\"/accoutDashBoard\" />}\r\n      <h1>Gold Bank</h1>\r\n      <h2>Transfer Funds</h2>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"benAcctNum\"\r\n            className=\"form-control\"\r\n            placeholder=\"Destination Account Number\"\r\n            value={transferFormData.benAcctNum}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"benFullName\"\r\n            className=\"form-control\"\r\n            placeholder=\"Receipient Account Name\"\r\n            value={transferFormData.benFullName}\r\n            readOnly\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            className=\"form-control\"\r\n            placeholder=\"Amount to transfer\"\r\n            value={transferFormData.amount}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"narration\"\r\n            className=\"form-control\"\r\n            placeholder=\"Narration\"\r\n            value={transferFormData.narration}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"action-items\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"submit\"\r\n            onClick={TransferMoney}\r\n          >\r\n            Transfer\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <br />\r\n      <button className=\"btn btn-outline-primary\" onClick={viewList}>\r\n        View List of Registered Users\r\n      </button>\r\n      <br />\r\n      <div id=\"usersList\" style={{ display: \"none\" }}></div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./SignUp\";\r\nimport Dashboard from \"./AccountDashboard\";\r\nimport SendMoney from \"./SendMoney\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  postLogin,\r\n  postLogout,\r\n  postTransferMoney,\r\n  postSignUp,\r\n  viewRegisteredUsers,\r\n} from \"../redux/actions/actions\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nfunction MainPage({\r\n  login,\r\n  sendMoney,\r\n  loggedInClient,\r\n  signup,\r\n  logout,\r\n  viewUserList,\r\n  usersList,\r\n}) {\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={true}\r\n      />\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/login\" component={() => <Login login={login} />} />\r\n          <Route path=\"/signup\" component={() => <Signup signup={signup} />} />\r\n          <Route\r\n            path=\"/sendMoney\"\r\n            component={() => (\r\n              <SendMoney\r\n                sendMoney={sendMoney}\r\n                viewUsersList={viewUserList}\r\n                senderInfo={loggedInClient.clientData}\r\n                usersList={usersList}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/accoutDashBoard\"\r\n            exact\r\n            component={() => (\r\n              <Dashboard info={loggedInClient.clientData} logout={logout} />\r\n            )}\r\n          />\r\n          <Route path=\"/\" exact component={() => <Login login={login} />} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (data) => dispatch(postLogin(data)),\r\n  sendMoney: (info) => dispatch(postTransferMoney(info)),\r\n  signup: (data) => dispatch(postSignUp(data)),\r\n  logout: () => dispatch(postLogout()),\r\n  viewUserList: () => dispatch(viewRegisteredUsers()),\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedInClient: state.loggedInClient,\r\n    usersList: state.updateClientListDataReducer,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\r\n","import React from \"react\";\nimport Main from \"./MainPage\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport loggedInClient from \"./clientreducers\";\r\nimport updateClientListDataReducer from \"./clientListReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  loggedInClient,\r\n  updateClientListDataReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as actionTypes from \"../actionTypes\";\r\nimport { initialClientState } from \"./initialState\";\r\n\r\nexport default function updateClientDataReducer(\r\n  state = {\r\n    clientData: initialClientState,\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CLIENT_INFO:\r\n      return { ...state, clientData: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"../actionTypes\";\r\nimport { initialClientList } from \"./initialState\";\r\n\r\nexport default function updateClientListDataReducer(\r\n  state = initialClientList,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CLIENT_LIST:\r\n      return [...action.payload];\r\n\r\n    case actionTypes.REMOVE_CLIENT_LIST:\r\n      return initialClientList;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./components/App\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { maintainSession } from \"./components/utils\";\n\nexport const store = configureStore();\n\nmaintainSession();\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\n\r\nexport default function configureStore(initialStore) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //add support for Redux dev tools\r\n  return createStore(\r\n    rootReducer,\r\n    initialStore,\r\n    composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}