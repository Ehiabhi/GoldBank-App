{"version":3,"sources":["components/Login.js","components/SignUp.js","components/utils.js","components/AccountDashboard.js","components/SendMoney.js","redux/actionTypes.js","redux/actions/actions.js","components/MainPage.js","components/App.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/clientreducers.js","index.js","redux/configureStore.js"],"names":["withRouter","login","history","useState","accountNumber","password","loginFormData","setLoginFormData","logIn","e","a","preventDefault","then","status","success","push","catch","err","Error","message","text","alert","handleInputChange","target","name","value","prevState","onSubmit","className","type","min","placeholder","fullName","onChange","required","to","SignUp","signup","contact","gender","confirmPassword","signupFormData","setSignupFormData","goToLogin","setGoToLogin","hidden","greeting","currentHour","Date","getHours","Dashboard","info","accountBalance","lastloggedIn","_id","customerInfo","setCustomerInfo","routeToSendMoney","setRouteToSendMoney","useEffect","onClick","document","getElementById","style","display","h","transactionHistory","length","innerHTML","h2","createElement","appendChild","forEach","entry","index","dateformat","Type","AcctNum","Amount","Narration","d","debitArray","filter","c","creditArray","id","SendMoney","senderInfo","sendMoney","benAcctNum","benFullName","amount","narration","transferFormData","setTransferFormData","goToDashboard","setGoToDashboard","readOnly","dataToSend","senderId","receipient","toast","GET_CLIENT_INFO","updateClientData","data","actionTypes","payload","connect","state","loggedInClient","dispatch","formData","fetch","method","headers","Accept","body","JSON","stringify","response","ok","console","log","statusText","json","res","error","errmess","transferdata","position","autoClose","hideProgressBar","path","component","clientData","exact","App","initialClientState","rootReducer","combineReducers","action","store","initialStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.66843033.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login({ login, history }) {\r\n  const [loginFormData, setLoginFormData] = useState({\r\n    accountNumber: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const logIn = async (e) => {\r\n    e.preventDefault();\r\n    login(loginFormData)\r\n      .then((status) => {\r\n        if (status.success) {\r\n          history.push(\"/accoutDashBoard\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        let mes = new Error();\r\n        mes.message = err.text;\r\n        alert(err);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setLoginFormData((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Welcome To Gold Bank.</h1>\r\n      <h2>Kindly input your login details to sign in</h2>\r\n      <form onSubmit={logIn}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"accountNumber\"\r\n            min=\"0\"\r\n            className=\"form-control\"\r\n            placeholder=\"Account/Phone Number\"\r\n            value={loginFormData.fullName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            value={loginFormData.fullName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"action-items\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Login\r\n          </button>\r\n          <Link className=\"btn btn-outline-primary\" to={\"/signup\"}>\r\n            Sign Up\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nexport default function SignUp({ signup }) {\r\n  const [signupFormData, setSignupFormData] = useState({\r\n    fullName: \"\",\r\n    contact: \"\",\r\n    gender: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [goToLogin, setGoToLogin] = useState(false);\r\n\r\n  const signUp = (e) => {\r\n    e.preventDefault();\r\n    if (signupFormData.password !== signupFormData.confirmPassword) {\r\n      alert(\"Passwords do not match\");\r\n      return false;\r\n    }\r\n    signup(signupFormData)\r\n      .then((status) => {\r\n        setGoToLogin(status);\r\n      })\r\n      .catch((err) => {\r\n        let mes = new Error();\r\n        mes.message = err.text;\r\n        alert(err);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setSignupFormData((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {goToLogin && <Redirect to=\"/login\" />}\r\n      <h1>Welcome</h1>\r\n      <h2>Kindly sign up to own an account with us today.</h2>\r\n      <form onSubmit={signUp}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"fullName\"\r\n            className=\"form-control\"\r\n            placeholder=\"Full Name\"\r\n            value={signupFormData.fullName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"contact\"\r\n            className=\"form-control\"\r\n            placeholder=\"Phone Number\"\r\n            value={signupFormData.contact}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"gender\"\r\n            value={signupFormData.gender}\r\n            onChange={handleInputChange}\r\n            required\r\n          >\r\n            {/* Used to create a placeholder for the select element. */}\r\n            <option value=\"\" hidden>\r\n              Select a gender\r\n            </option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">Female</option>\r\n            <option value=\"undisclosed\">Prefer not to say</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            value={signupFormData.password}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            className=\"form-control\"\r\n            placeholder=\"Confirm Password\"\r\n            value={signupFormData.confirmPassword}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"action-items\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Sign Up\r\n          </button>\r\n          <Link className=\"btn btn-outline-primary\" to={\"/login\"}>\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","export function greeting() {\r\n  const currentHour = new Date().getHours();\r\n  if (currentHour < 12 || currentHour === 0) {\r\n    return \"Good morning\";\r\n  } else if (currentHour < 16) {\r\n    return \"Good afternoon\";\r\n  } else {\r\n    return \"Good evening\";\r\n  }\r\n}\r\n\r\n// export const maintainSession = () => {\r\n//   const user_token = localStorage.getItem(\"user_token\");\r\n//   if (user_token) {\r\n//     const decoded = jwt_decode(user_token);\r\n//     updateStore(decoded);\r\n//   } else {\r\n//     history.pushState(\"/\");\r\n//   }\r\n// };\r\n\r\n// export const updateStore = (user) => {\r\n//   const { acctNum, password } = user;\r\n//   store.dispatch(\r\n//     signIn({\r\n//       acctNum,\r\n//       password,\r\n//       token: localStorage.getItem(\"user_token\"),\r\n//     })\r\n//   );\r\n//   store.dispatch(initiateGetProfile(acctNum));\r\n// };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { greeting } from \"./utils\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport dateformat from \"dateformat\";\r\n\r\nexport default function Dashboard({ info }) {\r\n  const [customerInfo, setCustomerInfo] = useState({\r\n    accountBalance: null,\r\n    accountNumber: null,\r\n    fullName: null,\r\n    gender: null,\r\n    lastloggedIn: null,\r\n    _id: null,\r\n  });\r\n  const [routeToSendMoney, setRouteToSendMoney] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCustomerInfo(info);\r\n  }, [info]);\r\n\r\n  const handleSendMoney = () => {\r\n    setRouteToSendMoney(true);\r\n  };\r\n\r\n  const fetchDebitTransaction = () => {\r\n    document.getElementById(\"transactHistory\").style.display = \"none\";\r\n    document.getElementById(\"transactHistoryCredit\").style.display = \"none\";\r\n\r\n    let d = document.getElementById(\"transactHistoryDebit\");\r\n    d.style.display = \"block\";\r\n    let debitArray = info.transactionHistory.filter(\r\n      (entry) => entry.Type === \"Transaction type: Dr\"\r\n    );\r\n    if (debitArray.length === 0) {\r\n      if (d.innerHTML === \"\") {\r\n        d.innerHTML = \"There are no entries to display.\";\r\n        return;\r\n      }\r\n      return false;\r\n    } else {\r\n      if (\r\n        d.innerHTML === \"\" ||\r\n        d.innerHTML === \"There are no entries to display.\"\r\n      ) {\r\n        const h2 = document.createElement(\"h2\");\r\n        h2.innerHTML = \"Debit Transactions\";\r\n        d.appendChild(h2);\r\n        debitArray.forEach((entry, index) => {\r\n          d.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n              <ul class=\"list-group transactionList\">\r\n                <li class=\"list-group-item\">${dateformat(\r\n                  entry.Date,\r\n                  \"dd/mmm/yyyy HH:MM\"\r\n                )}</li>\r\n                <li class=\"list-group-item\">${entry.Type}</li>\r\n                <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n                <li class=\"list-group-item\">${entry.Amount}</li>\r\n                <li class=\"list-group-item\">${entry.Narration}</li>\r\n              </ul>\r\n            </div>\r\n            `;\r\n        });\r\n        return;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchCreditTransaction = () => {\r\n    document.getElementById(\"transactHistory\").style.display = \"none\";\r\n    document.getElementById(\"transactHistoryDebit\").style.display = \"none\";\r\n\r\n    let c = document.getElementById(\"transactHistoryCredit\");\r\n    c.style.display = \"block\";\r\n    let creditArray = info.transactionHistory.filter(\r\n      (entry) => entry.Type === \"Transaction type: Cr\"\r\n    );\r\n    if (creditArray.length === 0) {\r\n      if (c.innerHTML === \"\") {\r\n        c.innerHTML = \"There are no entries to display.\";\r\n        return;\r\n      }\r\n      return false;\r\n    } else {\r\n      if (\r\n        c.innerHTML === \"\" ||\r\n        c.innerHTML === \"There are no entries to display.\"\r\n      ) {\r\n        const h2 = document.createElement(\"h2\");\r\n        h2.innerHTML = \"Credit Transactions\";\r\n        c.appendChild(h2);\r\n        creditArray.forEach((entry, index) => {\r\n          c.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n              <ul class=\"list-group transactionList\">\r\n                <li class=\"list-group-item\">${dateformat(\r\n                  entry.Date,\r\n                  \"dd/mmm/yyyy HH:MM\"\r\n                )}</li>\r\n                <li class=\"list-group-item\">${entry.Type}</li>\r\n                <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n                <li class=\"list-group-item\">${entry.Amount}</li>\r\n                <li class=\"list-group-item\">${entry.Narration}</li>\r\n              </ul>\r\n            </div>\r\n            `;\r\n        });\r\n        return;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchTransactionHistory = () => {\r\n    document.getElementById(\"transactHistoryDebit\").style.display = \"none\";\r\n    document.getElementById(\"transactHistoryCredit\").style.display = \"none\";\r\n\r\n    let h = document.getElementById(\"transactHistory\");\r\n    h.style.display = \"block\";\r\n    if (info.transactionHistory.length === 0) {\r\n      if (h.innerHTML === \"\") {\r\n        h.innerHTML = \"There are no entries to display.\";\r\n        return;\r\n      }\r\n      return false;\r\n    } else {\r\n      if (\r\n        h.innerHTML === \"\" ||\r\n        h.innerHTML === \"There are no entries to display.\"\r\n      ) {\r\n        const h2 = document.createElement(\"h2\");\r\n        h2.innerHTML = \"Transaction History\";\r\n        h.appendChild(h2);\r\n        info.transactionHistory.forEach((entry, index) => {\r\n          h.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n              <ul class=\"list-group transactionList\">\r\n                <li class=\"list-group-item\">${dateformat(\r\n                  entry.Date,\r\n                  \"dd/mmm/yyyy HH:MM\"\r\n                )}</li>\r\n                <li class=\"list-group-item\">${entry.Type}</li>\r\n                <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n                <li class=\"list-group-item\">${entry.Amount}</li>\r\n                <li class=\"list-group-item\">${entry.Narration}</li>\r\n              </ul>\r\n            </div>\r\n            `;\r\n        });\r\n        return;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {routeToSendMoney && <Redirect to=\"/sendMoney\" />}\r\n      <h1>Gold Bank</h1>\r\n      <h2>\r\n        {greeting()}, {customerInfo.fullName}\r\n      </h2>\r\n      {/* <p>\r\n        Last Logged In:{\" \"}\r\n        <b>{dateformat(customerInfo.lastloggedIn, \"dd/mmm/yyyy HH:MM:ss\")}</b>\r\n      </p> */}\r\n      <p>\r\n        Account #<b>{customerInfo.accountNumber}</b>\r\n      </p>\r\n      <h3>\r\n        Account Balance: =N= <b>{customerInfo.accountBalance}</b>\r\n      </h3>\r\n      <button className=\"btn btn-primary\" onClick={handleSendMoney}>\r\n        Send Money\r\n      </button>\r\n      <br />\r\n      <br />\r\n      <button className=\"btn btn-primary\" onClick={fetchTransactionHistory}>\r\n        View Account Statement\r\n      </button>\r\n      &nbsp;\r\n      <button className=\"btn btn-primary\" onClick={fetchDebitTransaction}>\r\n        View All Debit Transaction\r\n      </button>\r\n      &nbsp;\r\n      <button className=\"btn btn-primary\" onClick={fetchCreditTransaction}>\r\n        View All Credit Transaction\r\n      </button>\r\n      <br />\r\n      <br />\r\n      <div id=\"transactHistory\"></div>\r\n      <div id=\"transactHistoryDebit\"></div>\r\n      <div id=\"transactHistoryCredit\"></div>\r\n      {/* <button className=\"btn btn-primary\" onClick={handleLogOut}>\r\n        Log out\r\n      </button> */}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function SendMoney({ senderInfo, sendMoney }) {\r\n  const [transferFormData, setTransferFormData] = useState({\r\n    benAcctNum: \"\",\r\n    benFullName: \"\",\r\n    amount: \"\",\r\n    narration: \"\",\r\n  });\r\n  const [goToDashboard, setGoToDashboard] = useState(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    setTransferFormData((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  const TransferMoney = (e) => {\r\n    e.preventDefault();\r\n    if (senderInfo.accountBalance < transferFormData.amount) {\r\n      alert(\"Insufficient funds\");\r\n      return false;\r\n    }\r\n    const dataToSend = {\r\n      senderId: senderInfo._id,\r\n      receipient: { ...transferFormData },\r\n    };\r\n    const status = sendMoney(dataToSend);\r\n    if (status) {\r\n      toast.success(\"Transfer Successful\");\r\n      setGoToDashboard(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {goToDashboard && <Redirect to=\"/accoutDashBoard\" />}\r\n      <h1>Gold Bank</h1>\r\n      <h2>Transfer Funds</h2>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"benAcctNum\"\r\n            className=\"form-control\"\r\n            placeholder=\"Destination Account Number\"\r\n            value={transferFormData.benAcctNum}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"benFullName\"\r\n            className=\"form-control\"\r\n            placeholder=\"Receipient Account Name\"\r\n            value={transferFormData.benFullName}\r\n            readOnly\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            className=\"form-control\"\r\n            placeholder=\"Amount to transfer\"\r\n            value={transferFormData.amount}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"narration\"\r\n            className=\"form-control\"\r\n            placeholder=\"Narration\"\r\n            value={transferFormData.narration}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={TransferMoney}>\r\n          Transfer\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","export const GET_CLIENT_INFO = \"GET_CLIENT_INFO\";\r\nexport const SET_SENDER_INFO = \"SET_SENDER_INFO\";\r\n","import * as actionTypes from \"../actionTypes\";\r\n\r\nexport function updateClientData(data) {\r\n  return { type: actionTypes.GET_CLIENT_INFO, payload: data };\r\n}\r\n\r\nexport const postLogin = (formData) => (dispatch) => {\r\n  return fetch(\"/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(formData),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\"Error: \" + response.statusText);\r\n        throw error;\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((res) => {\r\n      dispatch(updateClientData(res));\r\n      return { success: true };\r\n    })\r\n    .catch((error) => {\r\n      var errmess = new Error(error.message);\r\n      alert(errmess);\r\n      return { success: false };\r\n    });\r\n};\r\n\r\nexport const postTransferMoney = (transferdata) => (dispatch) => {\r\n  return fetch(\"/transfer\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(transferdata),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\r\n          \"Error \" + response.status + \": \" + response.statusText\r\n        );\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      dispatch(updateClientData(data));\r\n      return true;\r\n    })\r\n    .catch((error) => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n    });\r\n};\r\n\r\nexport const postSignUp = (formData) => (dispatch) => {\r\n  return fetch(\"/signup\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(formData),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return true;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\"Error: \" + response.statusText);\r\n        throw error;\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      var errmess = new Error(err.message);\r\n      throw errmess;\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./SignUp\";\r\nimport Dashboard from \"./AccountDashboard\";\r\nimport SendMoney from \"./SendMoney\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  postLogin,\r\n  postTransferMoney,\r\n  postSignUp,\r\n} from \"../redux/actions/actions\";\r\n\r\nfunction MainPage({ login, sendMoney, loggedInClient, signup }) {\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={true}\r\n      />\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/login\" component={() => <Login login={login} />} />\r\n          <Route path=\"/signup\" component={() => <Signup signup={signup} />} />\r\n          <Route\r\n            path=\"/sendMoney\"\r\n            component={() => (\r\n              <SendMoney\r\n                sendMoney={sendMoney}\r\n                senderInfo={loggedInClient.clientData}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/accoutDashBoard\"\r\n            exact\r\n            component={() => <Dashboard info={loggedInClient.clientData} />}\r\n          />\r\n          <Route path=\"/\" exact component={() => <Login login={login} />} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (data) => dispatch(postLogin(data)),\r\n  sendMoney: (info) => dispatch(postTransferMoney(info)),\r\n  signup: (data) => dispatch(postSignUp(data)),\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedInClient: state.loggedInClient,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\r\n","import React from \"react\";\nimport Main from \"./MainPage\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","export const initialClientState = {\r\n  accountBalance: null,\r\n  accountNumber: null,\r\n  fullName: null,\r\n  gender: null,\r\n  lastloggedIn: null,\r\n  _id: null,\r\n  transactionHistory: [],\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport loggedInClient from \"./clientreducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  loggedInClient,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as actionTypes from \"../actionTypes\";\r\nimport { initialClientState } from \"./initialState\";\r\n\r\nexport default function updateClientDataReducer(\r\n  state = {\r\n    clientData: initialClientState,\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CLIENT_INFO:\r\n      return { ...state, clientData: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./components/App\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\n\r\nexport default function configureStore(initialStore) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //add support for Redux dev tools\r\n  return createStore(\r\n    rootReducer,\r\n    initialStore,\r\n    composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}