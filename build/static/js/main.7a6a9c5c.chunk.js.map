{"version":3,"sources":["components/Login.js","components/SignUp.js","redux/actionTypes.js","redux/reducers/initialState.js","redux/actions/actions.js","components/utils.js","components/AccountDashboard.js","components/SendMoney.js","components/MainPage.js","components/App.js","redux/reducers/index.js","redux/reducers/clientreducers.js","index.js","redux/configureStore.js"],"names":["withRouter","login","history","useState","accountNumber","password","loginFormData","setLoginFormData","logIn","e","a","preventDefault","then","status","success","push","catch","err","Error","message","text","alert","handleInputChange","target","name","value","prevState","onSubmit","className","type","min","placeholder","fullName","onChange","required","to","SignUp","signup","contact","gender","confirmPassword","signupFormData","setSignupFormData","goToLogin","setGoToLogin","hidden","GET_CLIENT_INFO","initialClientState","accountBalance","lastloggedIn","_id","transactionHistory","updateClientData","data","actionTypes","payload","greeting","currentHour","Date","getHours","setAuthHeader","localStorage","getItem","info","logout","customerInfo","setCustomerInfo","routeToSendMoney","setRouteToSendMoney","useEffect","onClick","document","getElementById","style","display","h","length","innerHTML","h2","createElement","appendChild","forEach","entry","index","dateformat","Type","AcctNum","Amount","Narration","d","debitArray","filter","c","creditArray","id","SendMoney","senderInfo","sendMoney","benAcctNum","benFullName","amount","narration","transferFormData","setTransferFormData","goToDashboard","setGoToDashboard","readOnly","dataToSend","senderId","receipient","toast","createBrowserHistory","connect","state","loggedInClient","dispatch","formData","fetch","method","headers","Accept","body","JSON","stringify","response","ok","console","log","statusText","json","res","setItem","authToken","error","errmess","transferdata","Authorization","removeItem","position","autoClose","hideProgressBar","path","component","clientData","exact","App","rootReducer","combineReducers","action","store","initialStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","user_token","currentPath","location","pathname","profile","maintainSession","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7a6a9c5c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login({ login, history }) {\r\n  const [loginFormData, setLoginFormData] = useState({\r\n    accountNumber: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const logIn = async (e) => {\r\n    e.preventDefault();\r\n    login(loginFormData)\r\n      .then((status) => {\r\n        if (status.success) {\r\n          history.push(\"/accoutDashBoard\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        let mes = new Error();\r\n        mes.message = err.text;\r\n        alert(err);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setLoginFormData((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Welcome To Gold Bank.</h1>\r\n      <h2>Kindly input your login details to sign in</h2>\r\n      <form onSubmit={logIn}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"accountNumber\"\r\n            min=\"0\"\r\n            className=\"form-control\"\r\n            placeholder=\"Account/Phone Number\"\r\n            value={loginFormData.fullName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            value={loginFormData.fullName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"action-items\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Login\r\n          </button>\r\n          <Link className=\"btn btn-outline-primary\" to={\"/signup\"}>\r\n            Sign Up\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nexport default function SignUp({ signup }) {\r\n  const [signupFormData, setSignupFormData] = useState({\r\n    fullName: \"\",\r\n    contact: \"\",\r\n    gender: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [goToLogin, setGoToLogin] = useState(false);\r\n\r\n  const signUp = (e) => {\r\n    e.preventDefault();\r\n    if (signupFormData.password !== signupFormData.confirmPassword) {\r\n      alert(\"Passwords do not match\");\r\n      return false;\r\n    }\r\n    signup(signupFormData)\r\n      .then((status) => {\r\n        setGoToLogin(status);\r\n      })\r\n      .catch((err) => {\r\n        let mes = new Error();\r\n        mes.message = err.text;\r\n        alert(err);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setSignupFormData((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {goToLogin && <Redirect to=\"/login\" />}\r\n      <h1>Welcome</h1>\r\n      <h2>Kindly sign up to own an account with us today.</h2>\r\n      <form onSubmit={signUp}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"fullName\"\r\n            className=\"form-control\"\r\n            placeholder=\"Full Name\"\r\n            value={signupFormData.fullName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"contact\"\r\n            className=\"form-control\"\r\n            placeholder=\"Phone Number\"\r\n            value={signupFormData.contact}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"gender\"\r\n            value={signupFormData.gender}\r\n            onChange={handleInputChange}\r\n            required\r\n          >\r\n            {/* Used to create a placeholder for the select element. */}\r\n            <option value=\"\" hidden>\r\n              Select a gender\r\n            </option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">Female</option>\r\n            <option value=\"undisclosed\">Prefer not to say</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            value={signupFormData.password}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            className=\"form-control\"\r\n            placeholder=\"Confirm Password\"\r\n            value={signupFormData.confirmPassword}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"action-items\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Sign Up\r\n          </button>\r\n          <Link className=\"btn btn-outline-primary\" to={\"/login\"}>\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","export const GET_CLIENT_INFO = \"GET_CLIENT_INFO\";\r\nexport const SET_SENDER_INFO = \"SET_SENDER_INFO\";\r\n","export const initialClientState = {\r\n  accountBalance: null,\r\n  accountNumber: null,\r\n  fullName: null,\r\n  gender: null,\r\n  lastloggedIn: null,\r\n  _id: null,\r\n  transactionHistory: [],\r\n};\r\n","import * as actionTypes from \"../actionTypes\";\r\nimport { setAuthHeader } from \"../../components/utils\";\r\nimport { initialClientState } from \"../reducers/initialState\";\r\n\r\nexport function updateClientData(data) {\r\n  return { type: actionTypes.GET_CLIENT_INFO, payload: data };\r\n}\r\n\r\nexport const postLogin = (formData) => (dispatch) => {\r\n  return fetch(\"/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(formData),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\"Error: \" + response.statusText);\r\n        throw error;\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((res) => {\r\n      localStorage.setItem(\"user_token\", res.authToken);\r\n      dispatch(updateClientData(res));\r\n      return { success: true };\r\n    })\r\n    .catch((error) => {\r\n      var errmess = new Error(error.message);\r\n      alert(errmess);\r\n      return { success: false };\r\n    });\r\n};\r\n\r\nexport const postTransferMoney = (transferdata) => (dispatch) => {\r\n  return fetch(\"/transfer\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(transferdata),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\r\n          \"Error \" + response.status + \": \" + response.statusText\r\n        );\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      dispatch(updateClientData(data));\r\n      return true;\r\n    })\r\n    .catch((error) => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n    });\r\n};\r\n\r\nexport const postSignUp = (formData) => (dispatch) => {\r\n  return fetch(\"/signup\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(formData),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return true;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\"Error: \" + response.statusText);\r\n        throw error;\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      var errmess = new Error(err.message);\r\n      throw errmess;\r\n    });\r\n};\r\n\r\nexport const postLogout = () => (dispatch) => {\r\n  return fetch(\"/logout\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + setAuthHeader(),\r\n    },\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\"Error: \" + response.statusText);\r\n        throw error;\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((res) => {\r\n      localStorage.removeItem(\"user_token\");\r\n      dispatch(updateClientData(initialClientState));\r\n      return { success: true };\r\n    })\r\n    .catch((error) => {\r\n      var errmess = new Error(error.message);\r\n      alert(errmess);\r\n      return { success: false };\r\n    });\r\n};\r\n\r\nexport const initiateGetProfile = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(\"/getProfile\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + setAuthHeader(),\r\n        },\r\n      });\r\n      const profile = await response.json();\r\n      dispatch(updateClientData(profile));\r\n    } catch (error) {\r\n      var errmess = new Error(error.message);\r\n      alert(errmess);\r\n    }\r\n  };\r\n};\r\n","// import jwt_decode from \"jwt-decode\";\r\nimport { history } from \"./MainPage\";\r\nimport { initiateGetProfile } from \"../redux/actions/actions\";\r\nimport { store } from \"../index\";\r\n\r\nexport function greeting() {\r\n  const currentHour = new Date().getHours();\r\n  if (currentHour < 12 || currentHour === 0) {\r\n    return \"Good morning\";\r\n  } else if (currentHour < 16) {\r\n    return \"Good afternoon\";\r\n  } else {\r\n    return \"Good evening\";\r\n  }\r\n}\r\n\r\nexport const maintainSession = () => {\r\n  const user_token = localStorage.getItem(\"user_token\");\r\n  const currentPath = window.location.pathname;\r\n  if (user_token) {\r\n    store.dispatch(initiateGetProfile());\r\n    if (currentPath !== \"/accoutDashBoard\" && currentPath !== \"/sendMoney\") {\r\n      history.push(\"/\");\r\n    } else {\r\n      history.push(currentPath);\r\n    }\r\n  } else {\r\n    history.push(\"/\");\r\n  }\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  return token;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { greeting } from \"./utils\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport dateformat from \"dateformat\";\r\n\r\nfunction Dashboard({ info, history, logout }) {\r\n  const [customerInfo, setCustomerInfo] = useState({\r\n    accountBalance: null,\r\n    accountNumber: null,\r\n    fullName: null,\r\n    gender: null,\r\n    lastloggedIn: null,\r\n    _id: null,\r\n  });\r\n  const [routeToSendMoney, setRouteToSendMoney] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCustomerInfo(info);\r\n  }, [info]);\r\n\r\n  const handleSendMoney = () => {\r\n    setRouteToSendMoney(true);\r\n  };\r\n\r\n  const handleLogOut = () => {\r\n    logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const fetchDebitTransaction = () => {\r\n    document.getElementById(\"transactHistory\").style.display = \"none\";\r\n    document.getElementById(\"transactHistoryCredit\").style.display = \"none\";\r\n\r\n    let d = document.getElementById(\"transactHistoryDebit\");\r\n    d.style.display = \"block\";\r\n    let debitArray = info.transactionHistory.filter(\r\n      (entry) => entry.Type === \"Transaction type: Dr\"\r\n    );\r\n    if (debitArray.length === 0) {\r\n      if (d.innerHTML === \"\") {\r\n        d.innerHTML = \"There are no entries to display.\";\r\n        return;\r\n      }\r\n      return false;\r\n    } else {\r\n      if (\r\n        d.innerHTML === \"\" ||\r\n        d.innerHTML === \"There are no entries to display.\"\r\n      ) {\r\n        const h2 = document.createElement(\"h2\");\r\n        h2.innerHTML = \"Debit Transactions\";\r\n        d.appendChild(h2);\r\n        debitArray.forEach((entry, index) => {\r\n          d.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n              <ul class=\"list-group transactionList\">\r\n                <li class=\"list-group-item\">${dateformat(\r\n                  entry.Date,\r\n                  \"dd/mmm/yyyy HH:MM\"\r\n                )}</li>\r\n                <li class=\"list-group-item\">${entry.Type}</li>\r\n                <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n                <li class=\"list-group-item\">${entry.Amount}</li>\r\n                <li class=\"list-group-item\">${entry.Narration}</li>\r\n              </ul>\r\n            </div>\r\n            `;\r\n        });\r\n        return;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchCreditTransaction = () => {\r\n    document.getElementById(\"transactHistory\").style.display = \"none\";\r\n    document.getElementById(\"transactHistoryDebit\").style.display = \"none\";\r\n\r\n    let c = document.getElementById(\"transactHistoryCredit\");\r\n    c.style.display = \"block\";\r\n    let creditArray = info.transactionHistory.filter(\r\n      (entry) => entry.Type === \"Transaction type: Cr\"\r\n    );\r\n    if (creditArray.length === 0) {\r\n      if (c.innerHTML === \"\") {\r\n        c.innerHTML = \"There are no entries to display.\";\r\n        return;\r\n      }\r\n      return false;\r\n    } else {\r\n      if (\r\n        c.innerHTML === \"\" ||\r\n        c.innerHTML === \"There are no entries to display.\"\r\n      ) {\r\n        const h2 = document.createElement(\"h2\");\r\n        h2.innerHTML = \"Credit Transactions\";\r\n        c.appendChild(h2);\r\n        creditArray.forEach((entry, index) => {\r\n          c.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n              <ul class=\"list-group transactionList\">\r\n                <li class=\"list-group-item\">${dateformat(\r\n                  entry.Date,\r\n                  \"dd/mmm/yyyy HH:MM\"\r\n                )}</li>\r\n                <li class=\"list-group-item\">${entry.Type}</li>\r\n                <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n                <li class=\"list-group-item\">${entry.Amount}</li>\r\n                <li class=\"list-group-item\">${entry.Narration}</li>\r\n              </ul>\r\n            </div>\r\n            `;\r\n        });\r\n        return;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchTransactionHistory = () => {\r\n    document.getElementById(\"transactHistoryDebit\").style.display = \"none\";\r\n    document.getElementById(\"transactHistoryCredit\").style.display = \"none\";\r\n\r\n    let h = document.getElementById(\"transactHistory\");\r\n    h.style.display = \"block\";\r\n    if (info.transactionHistory.length === 0) {\r\n      if (h.innerHTML === \"\") {\r\n        h.innerHTML = \"There are no entries to display.\";\r\n        return;\r\n      }\r\n      return false;\r\n    } else {\r\n      if (\r\n        h.innerHTML === \"\" ||\r\n        h.innerHTML === \"There are no entries to display.\"\r\n      ) {\r\n        const h2 = document.createElement(\"h2\");\r\n        h2.innerHTML = \"Transaction History\";\r\n        h.appendChild(h2);\r\n        info.transactionHistory.forEach((entry, index) => {\r\n          h.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n              <ul class=\"list-group transactionList\">\r\n                <li class=\"list-group-item\">${dateformat(\r\n                  entry.Date,\r\n                  \"dd/mmm/yyyy HH:MM\"\r\n                )}</li>\r\n                <li class=\"list-group-item\">${entry.Type}</li>\r\n                <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n                <li class=\"list-group-item\">${entry.Amount}</li>\r\n                <li class=\"list-group-item\">${entry.Narration}</li>\r\n              </ul>\r\n            </div>\r\n            `;\r\n        });\r\n        return;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {routeToSendMoney && <Redirect to=\"/sendMoney\" />}\r\n      <h1>Gold Bank</h1>\r\n      <h2>\r\n        {greeting()}, {customerInfo.fullName}\r\n      </h2>\r\n      {/* <p>\r\n        Last Logged In:{\" \"}\r\n        <b>{dateformat(customerInfo.lastloggedIn, \"dd/mmm/yyyy HH:MM:ss\")}</b>\r\n      </p> */}\r\n      <p>\r\n        Account #<b>{customerInfo.accountNumber}</b>\r\n      </p>\r\n      <h3>\r\n        Account Balance: =N= <b>{customerInfo.accountBalance}</b>\r\n      </h3>\r\n      <button className=\"btn btn-primary\" onClick={handleSendMoney}>\r\n        Send Money\r\n      </button>\r\n      <br />\r\n      <br />\r\n      <button className=\"btn btn-primary\" onClick={fetchTransactionHistory}>\r\n        View Account Statement\r\n      </button>\r\n      &nbsp;\r\n      <button className=\"btn btn-primary\" onClick={fetchDebitTransaction}>\r\n        View All Debit Transaction\r\n      </button>\r\n      &nbsp;\r\n      <button className=\"btn btn-primary\" onClick={fetchCreditTransaction}>\r\n        View All Credit Transaction\r\n      </button>\r\n      &nbsp;\r\n      <button className=\"btn btn-danger\" onClick={handleLogOut}>\r\n        Log out\r\n      </button>\r\n      <br />\r\n      <br />\r\n      <div id=\"transactHistory\"></div>\r\n      <div id=\"transactHistoryDebit\"></div>\r\n      <div id=\"transactHistoryCredit\"></div>\r\n      {/* <button className=\"btn btn-primary\" onClick={handleLogOut}>\r\n        Log out\r\n      </button> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function SendMoney({ senderInfo, sendMoney }) {\r\n  const [transferFormData, setTransferFormData] = useState({\r\n    benAcctNum: \"\",\r\n    benFullName: \"\",\r\n    amount: \"\",\r\n    narration: \"\",\r\n  });\r\n  const [goToDashboard, setGoToDashboard] = useState(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    setTransferFormData((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  const TransferMoney = (e) => {\r\n    e.preventDefault();\r\n    if (senderInfo.accountBalance < transferFormData.amount) {\r\n      alert(\"Insufficient funds\");\r\n      return false;\r\n    }\r\n    const dataToSend = {\r\n      senderId: senderInfo._id,\r\n      receipient: { ...transferFormData },\r\n    };\r\n    const status = sendMoney(dataToSend);\r\n    if (status) {\r\n      toast.success(\"Transfer Successful\");\r\n      setGoToDashboard(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {goToDashboard && <Redirect to=\"/accoutDashBoard\" />}\r\n      <h1>Gold Bank</h1>\r\n      <h2>Transfer Funds</h2>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"benAcctNum\"\r\n            className=\"form-control\"\r\n            placeholder=\"Destination Account Number\"\r\n            value={transferFormData.benAcctNum}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"benFullName\"\r\n            className=\"form-control\"\r\n            placeholder=\"Receipient Account Name\"\r\n            value={transferFormData.benFullName}\r\n            readOnly\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            className=\"form-control\"\r\n            placeholder=\"Amount to transfer\"\r\n            value={transferFormData.amount}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"narration\"\r\n            className=\"form-control\"\r\n            placeholder=\"Narration\"\r\n            value={transferFormData.narration}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={TransferMoney}>\r\n          Transfer\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./SignUp\";\r\nimport Dashboard from \"./AccountDashboard\";\r\nimport SendMoney from \"./SendMoney\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  postLogin,\r\n  postLogout,\r\n  postTransferMoney,\r\n  postSignUp,\r\n} from \"../redux/actions/actions\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nfunction MainPage({ login, sendMoney, loggedInClient, signup, logout }) {\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={true}\r\n      />\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/login\" component={() => <Login login={login} />} />\r\n          <Route path=\"/signup\" component={() => <Signup signup={signup} />} />\r\n          <Route\r\n            path=\"/sendMoney\"\r\n            component={() => (\r\n              <SendMoney\r\n                sendMoney={sendMoney}\r\n                senderInfo={loggedInClient.clientData}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/accoutDashBoard\"\r\n            exact\r\n            component={() => (\r\n              <Dashboard info={loggedInClient.clientData} logout={logout} />\r\n            )}\r\n          />\r\n          <Route path=\"/\" exact component={() => <Login login={login} />} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (data) => dispatch(postLogin(data)),\r\n  sendMoney: (info) => dispatch(postTransferMoney(info)),\r\n  signup: (data) => dispatch(postSignUp(data)),\r\n  logout: () => dispatch(postLogout()),\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedInClient: state.loggedInClient,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\r\n","import React from \"react\";\nimport Main from \"./MainPage\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport loggedInClient from \"./clientreducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  loggedInClient,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as actionTypes from \"../actionTypes\";\r\nimport { initialClientState } from \"./initialState\";\r\n\r\nexport default function updateClientDataReducer(\r\n  state = {\r\n    clientData: initialClientState,\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CLIENT_INFO:\r\n      return { ...state, clientData: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./components/App\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { maintainSession } from \"./components/utils\";\n\nexport const store = configureStore();\n\nmaintainSession();\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\n\r\nexport default function configureStore(initialStore) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //add support for Redux dev tools\r\n  return createStore(\r\n    rootReducer,\r\n    initialStore,\r\n    composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}