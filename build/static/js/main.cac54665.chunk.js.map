{"version":3,"sources":["redux/actionTypes.js","redux/reducers/initialState.js","redux/actions/actions.js","components/utils.js","components/Login.js","components/SignUp.js","components/Header.js","components/Buttons.js","components/AccountDashboard.js","components/SendMoney.js","components/MainPage.js","components/App.js","redux/reducers/index.js","redux/reducers/clientreducers.js","redux/reducers/clientListReducer.js","index.js","redux/configureStore.js"],"names":["GET_CLIENT_INFO","GET_CLIENT_LIST","REMOVE_CLIENT_LIST","initialClientState","accountBalance","accountNumber","fullName","gender","lastloggedIn","_id","transactionHistory","initialClientList","updateClientData","data","type","actionTypes","payload","postTransferMoney","transferdata","dispatch","fetch","method","headers","Accept","body","JSON","stringify","then","response","ok","console","log","text","error","Error","status","statusText","json","catch","message","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","greeting","currentHour","getHours","setAuthHeader","localStorage","getItem","useStyles","makeStyles","theme","root","height","backgroundImage","backgroundBlendMode","backgroundPosition","backgroundRepeat","backgroundSize","backgroundColor","padding","image","back","borderRadius","paper","margin","spacing","display","flexDirection","alignItems","avatar","palette","primary","main","form","width","marginTop","submit","withRouter","login","history","classes","useState","password","acctStatus","acctMessage","passwordStatus","passwordMessage","loginFormData","setLoginFormData","logIn","e","a","preventDefault","length","prev","success","push","toast","err","prevState","alert","handleInputChange","target","value","name","Grid","container","component","className","CssBaseline","item","xs","sm","md","lg","Paper","elevation","square","Avatar","onSubmit","noValidate","TextField","helperText","required","fullWidth","label","onChange","autoFocus","Button","justify","to","Box","mt","formControl","minWidth","hmargin","textAlign","SignUp","signup","contact","confirmPassword","signupFormData","setSignupFormData","goToLogin","setGoToLogin","fullNameStatus","result","Object","keys","filter","input","errorData","i","mes","code","autoComplete","FormControl","InputLabel","Select","MenuItem","handleLogOut","id","onClick","button","fontWeight","Buttons","fetchAction","buttonContent","value1","value2","size","Dashboard","info","logout","customerInfo","setCustomerInfo","all","debit","credit","setButtonContent","routeToSendMoney","setRouteToSendMoney","useEffect","closeStatement","currentTarget","split","h","document","getElementById","innerHTML","style","h2","createElement","appendChild","forEach","entry","index","dateformat","Type","AcctNum","Amount","Narration","d","debitArray","table","tbody","c","creditArray","SendMoney","senderInfo","sendMoney","viewUsersList","usersList","benAcctNum","benFullName","amount","narration","transferFormData","setTransferFormData","goToDashboard","setGoToDashboard","list","placeholder","readOnly","autoClose","dataToSend","senderId","receipient","createBrowserHistory","connect","state","loggedInClient","updateClientListDataReducer","formData","res","setItem","authToken","Authorization","removeItem","errmess","viewUserList","position","hideProgressBar","path","clientData","exact","App","rootReducer","combineReducers","action","store","initialStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","user_token","currentHash","location","hash","profile","maintainSession","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cac54665.chunk.js","sourcesContent":["export const GET_CLIENT_INFO = \"GET_CLIENT_INFO\";\r\nexport const SET_SENDER_INFO = \"SET_SENDER_INFO\";\r\nexport const GET_CLIENT_LIST = \"GET_CLIENT_LIST\";\r\nexport const REMOVE_CLIENT_LIST = \"REMOVE_CLIENT_LIST\";\r\n","export const initialClientState = {\r\n  accountBalance: null,\r\n  accountNumber: null,\r\n  fullName: null,\r\n  gender: null,\r\n  lastloggedIn: null,\r\n  _id: null,\r\n  transactionHistory: [],\r\n};\r\n\r\nexport const initialClientList = [];\r\n","import * as actionTypes from \"../actionTypes\";\r\nimport { setAuthHeader } from \"../../components/utils\";\r\nimport { initialClientState } from \"../reducers/initialState\";\r\n\r\nexport function updateClientData(data) {\r\n  return { type: actionTypes.GET_CLIENT_INFO, payload: data };\r\n}\r\n\r\nexport function updateClientList(data) {\r\n  return { type: actionTypes.GET_CLIENT_LIST, payload: data };\r\n}\r\n\r\nexport function removeClientList() {\r\n  return { type: actionTypes.REMOVE_CLIENT_LIST };\r\n}\r\n\r\nexport const postLogin = (formData) => (dispatch) => {\r\n  return fetch(\"/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(formData),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        let error = new Error();\r\n        error.message = {\r\n          text: response.statusText,\r\n          status: response.status,\r\n        };\r\n        throw error;\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((res) => {\r\n      localStorage.setItem(\"user_token\", res.authToken);\r\n      dispatch(updateClientData(res));\r\n      return { success: true };\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n};\r\n\r\nexport const postTransferMoney = (transferdata) => (dispatch) => {\r\n  return fetch(\"/transfer\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(transferdata),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\r\n          \"Error \" + response.status + \": \" + response.statusText\r\n        );\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      dispatch(updateClientData(data));\r\n      dispatch(removeClientList());\r\n      return true;\r\n    })\r\n    .catch((error) => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n    });\r\n};\r\n\r\nexport const postSignUp = (formData) => (dispatch) => {\r\n  return fetch(\"/signup\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify(formData),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return true;\r\n      } else {\r\n        let error = new Error();\r\n        error.message = {\r\n          text: response.statusText,\r\n          status: response.status,\r\n        };\r\n        throw error;\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport const postLogout = () => (dispatch) => {\r\n  return fetch(\"/logout\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + setAuthHeader(),\r\n    },\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        console.log(\"An error occured \" + response.text);\r\n        let error = new Error(\"Error: \" + response.statusText);\r\n        throw error;\r\n      }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((res) => {\r\n      localStorage.removeItem(\"user_token\");\r\n      dispatch(updateClientData(initialClientState));\r\n      return { success: true };\r\n    })\r\n    .catch((error) => {\r\n      var errmess = new Error(error.message);\r\n      alert(errmess);\r\n      return { success: false };\r\n    });\r\n};\r\n\r\nexport const initiateGetProfile = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(\"/getProfile\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + setAuthHeader(),\r\n        },\r\n      });\r\n      const profile = await response.json();\r\n      dispatch(updateClientData(profile));\r\n    } catch (error) {\r\n      var errmess = new Error(error.message);\r\n      alert(errmess);\r\n    }\r\n  };\r\n};\r\n\r\nexport const viewRegisteredUsers = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(\"/viewRegisteredUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n      const usersList = await response.json();\r\n      dispatch(updateClientList(usersList));\r\n    } catch (error) {\r\n      var errmess = new Error(error.message);\r\n      alert(errmess);\r\n    }\r\n  };\r\n};\r\n","import Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { history } from \"./MainPage\";\r\nimport { initiateGetProfile } from \"../redux/actions/actions\";\r\nimport { store } from \"../index\";\r\n\r\nexport function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Gold Bank PLC\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport function greeting() {\r\n  const currentHour = new Date().getHours();\r\n  if (currentHour < 12 || currentHour === 0) {\r\n    return \"Good morning\";\r\n  } else if (currentHour < 16) {\r\n    return \"Good afternoon\";\r\n  } else {\r\n    return \"Good evening\";\r\n  }\r\n}\r\n\r\n// export const maintainSession = () => {\r\n//   const user_token = localStorage.getItem(\"user_token\");\r\n//   const currentPath = window.location.pathname;\r\n//   if (user_token) {\r\n//     store.dispatch(initiateGetProfile());\r\n//     if (currentPath === \"/accoutDashBoard\" || currentPath === \"/sendMoney\") {\r\n//       history.push(currentPath);\r\n//     } else {\r\n//       history.push(\"/accoutDashBoard\");\r\n//     }\r\n//   } else {\r\n//     history.push(\"/\");\r\n//   }\r\n// };\r\n\r\nexport const maintainSession = () => {\r\n  const user_token = localStorage.getItem(\"user_token\");\r\n  const currentHash = window.location.hash;\r\n  if (user_token) {\r\n    store.dispatch(initiateGetProfile());\r\n    if (currentHash === \"#/accoutDashBoard\" || currentHash === \"#/sendMoney\") {\r\n      history.push(\"/\" + currentHash);\r\n    } else {\r\n      history.push(\"/#/accoutDashBoard\");\r\n    }\r\n  } else {\r\n    history.push(\"/#/\");\r\n  }\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n  const token = localStorage.getItem(\"user_token\");\r\n  return token;\r\n};\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Copyright } from \"./utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    backgroundImage: \"url(./images/goldbanklogo.png)\",\r\n    backgroundBlendMode: \"multiply\",\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundColor: \"#000000b0\",\r\n    padding: \"10px\",\r\n  },\r\n  image: {\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor: \"transparent\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  back: {\r\n    backgroundColor: \"rgba(233, 161, 67, 0.836)\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    height: \"80%\",\r\n    // margin: theme.spacing(8, 4),\r\n    borderRadius: \"5px\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login({ login, history }) {\r\n  const classes = useStyles();\r\n  const [loginFormData, setLoginFormData] = useState({\r\n    accountNumber: \"\",\r\n    password: \"\",\r\n    error: {\r\n      acctStatus: false,\r\n      acctMessage: \"\",\r\n      passwordStatus: false,\r\n      passwordMessage: \"\",\r\n    },\r\n  });\r\n\r\n  const logIn = async (e) => {\r\n    e.preventDefault();\r\n    if (loginFormData.accountNumber.length < 11) {\r\n      setLoginFormData((prev) => {\r\n        return {\r\n          ...prev,\r\n          error: {\r\n            ...prev.error,\r\n            acctStatus: true,\r\n            acctMessage: \"Account Number must be exactly 11 characters.\",\r\n          },\r\n        };\r\n      });\r\n      return false;\r\n    }\r\n    login(loginFormData)\r\n      .then((status) => {\r\n        if (status.success) {\r\n          history.push(\"/accoutDashBoard\");\r\n          toast.success(\"Login successful.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        let error = new Error();\r\n        error.message = err.message;\r\n        setLoginFormData((prevState) => {\r\n          if (error.message.status === 402) {\r\n            return {\r\n              ...prevState,\r\n              error: {\r\n                ...prevState.error,\r\n                acctStatus: true,\r\n                acctMessage: error.message.text,\r\n              },\r\n            };\r\n          } else if (error.message.status === 403) {\r\n            return {\r\n              ...prevState,\r\n              error: {\r\n                ...prevState.error,\r\n                passwordStatus: true,\r\n                passwordMessage: error.message.text,\r\n              },\r\n            };\r\n          } else {\r\n            alert(error.message.text);\r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.value.length < 12) {\r\n      const { name, value } = e.target;\r\n      setLoginFormData((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          [name]: value,\r\n          error: {\r\n            acctStatus: false,\r\n            acctMessage: \"\",\r\n            passwordStatus: false,\r\n            passwordMessage: \"\",\r\n          },\r\n        };\r\n      });\r\n    } else {\r\n      setLoginFormData((prev) => {\r\n        return {\r\n          ...prev,\r\n          error: {\r\n            ...prev.error,\r\n            acctStatus: true,\r\n            acctMessage: \"Account Number cannot exceed 11 characters.\",\r\n          },\r\n        };\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={1} sm={2} md={false} lg={8} className={classes.image} />\r\n        <Grid\r\n          item\r\n          xs={10}\r\n          sm={8}\r\n          md={4}\r\n          lg={4}\r\n          className={classes.back}\r\n          component={Paper}\r\n          elevation={6}\r\n          square\r\n        >\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h4\">\r\n              Gold Bank PLC\r\n            </Typography>\r\n            <Typography component=\"h2\" variant=\"h6\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={logIn} noValidate>\r\n              <TextField\r\n                type=\"number\"\r\n                // pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n                error={loginFormData.error.acctStatus}\r\n                helperText={loginFormData.error.acctMessage}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Account/Phone Number\"\r\n                name=\"accountNumber\"\r\n                value={loginFormData.accountNumber}\r\n                onChange={handleInputChange}\r\n                autoFocus\r\n              />\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                error={loginFormData.error.passwordStatus}\r\n                helperText={loginFormData.error.passwordMessage}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={handleInputChange}\r\n                value={loginFormData.password}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Login\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  {/* <Link to={\"/signup\"}>Sign Up</Link> */}\r\n                  <Link to=\"/signup\" variant=\"body2\">\r\n                    \"Don't have an account? Sign Up\"\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={5}>{Copyright()}</Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={1} sm={2} md={8} lg={false} className={classes.image} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Copyright } from \"./utils\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    backgroundImage: \"url(./images/goldbanklogo.png)\",\r\n    backgroundBlendMode: \"multiply\",\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundColor: \"#000000b0\",\r\n    padding: \"10px\",\r\n  },\r\n  image: {\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor: \"transparent\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  hmargin: {\r\n    textAlign: \"center\",\r\n  },\r\n  back: {\r\n    backgroundColor: \"rgba(233, 161, 67, 0.836)\",\r\n    height: \"80%\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp({ signup }) {\r\n  const classes = useStyles();\r\n  const [signupFormData, setSignupFormData] = useState({\r\n    fullName: \"\",\r\n    contact: \"\",\r\n    gender: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    error: {\r\n      fullName: {\r\n        status: false,\r\n        message: \"\",\r\n      },\r\n      contact: {\r\n        status: false,\r\n        message: \"\",\r\n      },\r\n      gender: {\r\n        status: false,\r\n        message: \"\",\r\n      },\r\n      password: {\r\n        status: false,\r\n        message: \"\",\r\n      },\r\n      confirmPassword: {\r\n        status: false,\r\n        message: \"\",\r\n      },\r\n    },\r\n  });\r\n  const [goToLogin, setGoToLogin] = useState(false);\r\n\r\n  const signUp = (e) => {\r\n    e.preventDefault();\r\n    if (signupFormData.password !== signupFormData.confirmPassword) {\r\n      setSignupFormData((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          error: {\r\n            ...prevState.error,\r\n            password: { status: true, message: \"Passwords do not match\" },\r\n          },\r\n        };\r\n      });\r\n      return false;\r\n    }\r\n\r\n    const formDataToSubmit = Object.keys(signupFormData);\r\n    const result = formDataToSubmit.filter(\r\n      (input) => signupFormData[input] === \"\"\r\n    );\r\n    let errorData = {};\r\n    if (result.length !== 0) {\r\n      for (let i = 0; i < result.length; i++) {\r\n        errorData = {\r\n          ...errorData,\r\n          [result[i]]: { status: true, message: \"Field cannot be empty\" },\r\n        };\r\n      }\r\n      setSignupFormData((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          error: {\r\n            ...prevState.error,\r\n            ...errorData,\r\n          },\r\n        };\r\n      });\r\n      return false;\r\n    }\r\n\r\n    signup(signupFormData)\r\n      .then((status) => {\r\n        toast.success(\"Sign up successful.\");\r\n        setGoToLogin(status);\r\n      })\r\n      .catch((err) => {\r\n        let mes = err.message.text;\r\n        let code = err.message.status;\r\n        setSignupFormData((prevState) => {\r\n          if (code === 408) {\r\n            return {\r\n              ...prevState,\r\n              error: {\r\n                ...prevState.error,\r\n                fullName: { status: true, message: mes },\r\n              },\r\n            };\r\n          } else if (code === 409) {\r\n            return {\r\n              ...prevState,\r\n              error: {\r\n                ...prevState.error,\r\n                contact: { status: true, message: mes },\r\n              },\r\n            };\r\n          } else {\r\n            alert(mes);\r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setSignupFormData((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: value,\r\n        error: {\r\n          fullNameStatus: {\r\n            status: false,\r\n            message: \"\",\r\n          },\r\n          contact: {\r\n            status: false,\r\n            message: \"\",\r\n          },\r\n          gender: {\r\n            status: false,\r\n            message: \"\",\r\n          },\r\n          password: {\r\n            status: false,\r\n            message: \"\",\r\n          },\r\n          confirmPassword: {\r\n            status: false,\r\n            message: \"\",\r\n          },\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {goToLogin && <Redirect to=\"/login\" />}\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        {/* <Grid item xs={false} sm={2} md={3} /> */}\r\n        <Grid item xs={1} sm={2} md={false} lg={8} className={classes.image} />\r\n        <Grid\r\n          item\r\n          xs={10}\r\n          sm={8}\r\n          md={4}\r\n          lg={4}\r\n          className={classes.back}\r\n          component={Paper}\r\n          elevation={6}\r\n          square\r\n        >\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h4\">\r\n              Gold Bank PLC\r\n            </Typography>\r\n            <Typography className={classes.hmargin} component=\"h2\" variant=\"h6\">\r\n              Kindly sign up to own an account with us today.\r\n            </Typography>\r\n            <form onSubmit={signUp} className={classes.form} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"fullName\"\r\n                    error={\r\n                      signupFormData.error.fullName\r\n                        ? signupFormData.error.fullName.status\r\n                        : null\r\n                    }\r\n                    helperText={\r\n                      signupFormData.error.fullName\r\n                        ? signupFormData.error.fullName.message\r\n                        : null\r\n                    }\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    value={signupFormData.fullName}\r\n                    required\r\n                    fullWidth\r\n                    onChange={handleInputChange}\r\n                    label=\"Full Name\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    error={signupFormData.error.contact.status}\r\n                    helperText={signupFormData.error.contact.message}\r\n                    value={signupFormData.contact}\r\n                    type=\"number\"\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    fullWidth\r\n                    label=\"Phone Number\"\r\n                    name=\"contact\"\r\n                    autoComplete=\"lname\"\r\n                  />\r\n                </Grid>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel>Gender</InputLabel>\r\n                  <Select\r\n                    name=\"gender\"\r\n                    error={signupFormData.error.gender.status}\r\n                    helperText={signupFormData.error.gender.message}\r\n                    value={signupFormData.gender}\r\n                    onChange={handleInputChange}\r\n                    label=\"Age\"\r\n                  >\r\n                    {/* Used to create a placeholder for the select element. */}\r\n                    <MenuItem value=\"\">\r\n                      <em>Select a gender</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"male\">Male</MenuItem>\r\n                    <MenuItem value=\"female\">Female</MenuItem>\r\n                    <MenuItem value=\"undisclosed\">Prefer not to say</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    error={signupFormData.error.password.status}\r\n                    helperText={signupFormData.error.password.message}\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    value={signupFormData.password}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    error={signupFormData.error.confirmPassword.status}\r\n                    helperText={signupFormData.error.confirmPassword.message}\r\n                    required\r\n                    fullWidth\r\n                    name=\"confirmPassword\"\r\n                    label=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    value={signupFormData.confirmPassword}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link to=\"/\" variant=\"body2\">\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            <Box mt={5}>{Copyright()}</Box>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={1} sm={2} md={8} lg={false} className={classes.image} />\r\n        {/* <Grid item xs={false} sm={2} md={3} /> */}\r\n      </Grid>\r\n\r\n      {/* <Container className={classes.back} component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}></div>\r\n      </Container> */}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Header({ handleLogOut, history }) {\r\n  const logout = () => {\r\n    handleLogOut();\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div id=\"dashBoard\" className=\"col-xs-6 col-md-6\">\r\n      <h1>Gold Bank</h1>\r\n      <button className=\"btn btn-danger\" onClick={logout}>\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: \"10rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#000\",\r\n    \"&:hover\": {\r\n      color: \"#000\",\r\n      backgroundColor: \"#fff\",\r\n      fontWeight: \"bolder\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Buttons({ name, fetchAction, buttonContent, value1, value2 }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      name={name}\r\n      variant=\"contained\"\r\n      className={classes.button}\r\n      onClick={fetchAction}\r\n      size=\"large\"\r\n    >\r\n      {!buttonContent ? value1 : value2}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { greeting } from \"./utils\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport dateformat from \"dateformat\";\r\nimport Buttons from \"./Buttons\";\r\n\r\nfunction Dashboard({ info, logout }) {\r\n  const [customerInfo, setCustomerInfo] = useState({\r\n    accountBalance: null,\r\n    accountNumber: null,\r\n    fullName: null,\r\n    gender: null,\r\n    lastloggedIn: null,\r\n    _id: null,\r\n  });\r\n  const [buttonContent, setButtonContent] = useState({\r\n    all: false,\r\n    debit: false,\r\n    credit: false,\r\n  });\r\n  const [routeToSendMoney, setRouteToSendMoney] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCustomerInfo(info);\r\n  }, [info]);\r\n\r\n  const handleSendMoney = () => {\r\n    setRouteToSendMoney(true);\r\n  };\r\n\r\n  const closeStatement = (e) => {\r\n    const name = e.currentTarget.name;\r\n    switch (name) {\r\n      case \"all\":\r\n        setButtonContent((prevState) => {\r\n          return { ...prevState, all: !prevState.all };\r\n        });\r\n        return;\r\n\r\n      case \"credit\":\r\n        setButtonContent((prevState) => {\r\n          return { ...prevState, credit: !prevState.credit };\r\n        });\r\n        return;\r\n\r\n      case \"debit\":\r\n        setButtonContent((prevState) => {\r\n          return { ...prevState, debit: !prevState.debit };\r\n        });\r\n        return;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const fetchDebitTransaction = (e) => {\r\n    let d = document.getElementById(\"transactHistoryDebit\");\r\n    if (!buttonContent.debit) {\r\n      document.getElementById(\"transactHistory\").style.display = \"none\";\r\n      document.getElementById(\"transactHistoryCredit\").style.display = \"none\";\r\n\r\n      d.style.display = \"block\";\r\n      let debitArray = info.transactionHistory.filter(\r\n        (entry) => entry.Type === \"Transaction type: Dr\" || entry.Type === \"Dr\"\r\n      );\r\n      if (debitArray.length === 0) {\r\n        if (d.innerHTML === \"\") {\r\n          d.innerHTML = \"There are no entries to display.\";\r\n        }\r\n      } else {\r\n        if (\r\n          d.innerHTML === \"\" ||\r\n          d.innerHTML === \"There are no entries to display.\"\r\n        ) {\r\n          const h2 = document.createElement(\"h2\");\r\n          h2.innerHTML = \"Debit Transactions\";\r\n          d.appendChild(h2);\r\n          const table = document.createElement(\"table\");\r\n          table.className = \"table\";\r\n          table.id = \"table\";\r\n          table.innerHTML = `<thead>\r\n            <tr>\r\n              <th align=\"center\">Date</th>\r\n              <th align=\"center\">Type</th>\r\n              <th align=\"center\">Acct. No.</th>\r\n              <th align=\"center\">Amount</th>\r\n              <th align=\"center\">Narration</th>\r\n            </tr>\r\n          </thead>`;\r\n          const tbody = document.createElement(\"tbody\");\r\n          debitArray.forEach((entry, index) => {\r\n            tbody.innerHTML += `<tr id=\"trow\" key=${index}>\r\n            <td align=\"center\">${dateformat(\r\n              entry.Date,\r\n              \"dd/mmm/yyyy HH:MM\"\r\n            )}</td>\r\n            <td align=\"center\">${entry.Type}</td>\r\n            <td align=\"center\">${entry.AcctNum}</td>\r\n            <td align=\"center\">${entry.Amount}</td>\r\n            <td align=\"center\">${entry.Narration}</td>\r\n          </tr>\r\n            `;\r\n          });\r\n\r\n          table.appendChild(tbody);\r\n          d.appendChild(table);\r\n\r\n          // <table className=\"table\" id=\"table\">\r\n          //   <thead>\r\n          //     <tr>\r\n          //       <th align=\"center\">Date</th>\r\n          //       <th align=\"center\">Type</th>\r\n          //       <th align=\"center\">Acct. No.</th>\r\n          //       <th align=\"center\">Amount</th>\r\n          //       <th align=\"center\">Narration</th>\r\n          //     </tr>\r\n          //   </thead>\r\n          //   <tbody>\r\n          //     <tr>\r\n          //       <td align=\"center\">ticket.nodeA</td>\r\n          //       <td align=\"center\">ticket.nodeB</td>\r\n          //       <td align=\"center\">ticket.vendor</td>\r\n          //     </tr>\r\n          //   </tbody>\r\n          // </table>;\r\n\r\n          // debitArray.forEach((entry, index) => {\r\n          //   d.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n          //       <ul class=\"list-group transactionList\">\r\n          //         <li class=\"list-group-item\">${dateformat(\r\n          //           entry.Date,\r\n          //           \"dd/mmm/yyyy HH:MM\"\r\n          //         )}</li>\r\n          //         <li class=\"list-group-item\">${entry.Type}</li>\r\n          //         <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n          //         <li class=\"list-group-item\">${entry.Amount}</li>\r\n          //         <li class=\"list-group-item\">${entry.Narration}</li>\r\n          //       </ul>\r\n          //     </div>\r\n          //     `;\r\n          // });\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      d.innerHTML = \"\";\r\n    }\r\n    closeStatement(e);\r\n  };\r\n\r\n  const fetchCreditTransaction = (e) => {\r\n    let c = document.getElementById(\"transactHistoryCredit\");\r\n    if (!buttonContent.credit) {\r\n      document.getElementById(\"transactHistory\").style.display = \"none\";\r\n      document.getElementById(\"transactHistoryDebit\").style.display = \"none\";\r\n\r\n      c.style.display = \"block\";\r\n      let creditArray = info.transactionHistory.filter(\r\n        (entry) => entry.Type === \"Transaction type: Cr\"\r\n      );\r\n      if (creditArray.length === 0) {\r\n        if (c.innerHTML === \"\") {\r\n          c.innerHTML = \"There are no entries to display.\";\r\n        }\r\n      } else {\r\n        if (\r\n          c.innerHTML === \"\" ||\r\n          c.innerHTML === \"There are no entries to display.\"\r\n        ) {\r\n          const h2 = document.createElement(\"h2\");\r\n          h2.innerHTML = \"Credit Transactions\";\r\n          c.appendChild(h2);\r\n          creditArray.forEach((entry, index) => {\r\n            c.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n                <ul class=\"list-group transactionList\">\r\n                  <li class=\"list-group-item\">${dateformat(\r\n                    entry.Date,\r\n                    \"dd/mmm/yyyy HH:MM\"\r\n                  )}</li>\r\n                  <li class=\"list-group-item\">${entry.Type}</li>\r\n                  <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n                  <li class=\"list-group-item\">${entry.Amount}</li>\r\n                  <li class=\"list-group-item\">${entry.Narration}</li>\r\n                </ul>\r\n              </div>\r\n              `;\r\n          });\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      c.innerHTML = \"\";\r\n    }\r\n    closeStatement(e);\r\n  };\r\n\r\n  const fetchTransactionHistory = (e) => {\r\n    // get hold of the transaction history div\r\n    let h = document.getElementById(\"transactHistory\");\r\n    if (!buttonContent.all) {\r\n      document.getElementById(\"transactHistoryDebit\").style.display = \"none\";\r\n      document.getElementById(\"transactHistoryCredit\").style.display = \"none\";\r\n      h.style.display = \"block\";\r\n      if (info.transactionHistory.length === 0) {\r\n        if (h.innerHTML === \"\") {\r\n          h.innerHTML = \"There are no entries to display.\";\r\n        }\r\n      } else {\r\n        if (\r\n          h.innerHTML === \"\" ||\r\n          h.innerHTML === \"There are no entries to display.\"\r\n        ) {\r\n          const h2 = document.createElement(\"h2\");\r\n          h2.innerHTML = \"Transaction History\";\r\n          h.appendChild(h2);\r\n          info.transactionHistory.forEach((entry, index) => {\r\n            h.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n                <ul class=\"list-group transactionList\">\r\n                  <li class=\"list-group-item\">${dateformat(\r\n                    entry.Date,\r\n                    \"dd/mmm/yyyy HH:MM\"\r\n                  )}</li>\r\n                  <li class=\"list-group-item\">${entry.Type}</li>\r\n                  <li class=\"list-group-item\">${entry.AcctNum}</li>\r\n                  <li class=\"list-group-item\">${entry.Amount}</li>\r\n                  <li class=\"list-group-item\">${entry.Narration}</li>\r\n                </ul>\r\n              </div>\r\n              `;\r\n          });\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      h.innerHTML = \"\";\r\n    }\r\n    closeStatement(e);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-xs-12\" id=\"dashBoardRow\">\r\n      {routeToSendMoney && <Redirect to=\"/sendMoney\" />}\r\n      <Header handleLogOut={logout} />\r\n      <div id=\"greet\" className=\"col-xs-12\">\r\n        <p>\r\n          {greeting()},{\" \"}\r\n          {customerInfo.fullName && customerInfo.fullName.split(\" \")[0]}\r\n        </p>\r\n      </div>\r\n      <div className=\"col-xs-12\">\r\n        <p>\r\n          Acct. No. #<b>0{customerInfo.accountNumber}</b>\r\n        </p>\r\n        <div id=\"accountBal\">\r\n          <p>Account Balance</p>\r\n          <h2>\r\n            <b>=N={customerInfo.accountBalance}</b>\r\n          </h2>\r\n          <Buttons\r\n            name=\"all\"\r\n            value1=\"Send money\"\r\n            fetchAction={handleSendMoney}\r\n          />\r\n        </div>\r\n        <div id=\"transact\">\r\n          <div id=\"transactHistory\"></div>\r\n          <div id=\"transactHistoryDebit\"></div>\r\n          <div id=\"transactHistoryCredit\"></div>\r\n        </div>\r\n        {/* <div\r\n            class=\"card transactionContainer mb-3\"\r\n            style={{ width: \"18rem\" }}\r\n          >\r\n            <ul class=\"list-group transactionList\">\r\n              <li class=\"list-group-item\">dd/mmm/yyyy HH:MM</li>\r\n              <li class=\"list-group-item\">entry.Type</li>\r\n              <li class=\"list-group-item\">entry.AcctNum</li>\r\n              <li class=\"list-group-item\">entry.Amount</li>\r\n              <li class=\"list-group-item\">entry.Narration</li>\r\n            </ul>\r\n          </div> */}\r\n        <footer id=\"foot\">\r\n          <Buttons\r\n            name=\"all\"\r\n            buttonContent={buttonContent.all}\r\n            value1=\"View Statement\"\r\n            value2=\"Close\"\r\n            fetchAction={fetchTransactionHistory}\r\n          />\r\n          <Buttons\r\n            name=\"debit\"\r\n            buttonContent={buttonContent.debit}\r\n            value1=\"View Debits\"\r\n            value2=\"Close\"\r\n            fetchAction={fetchDebitTransaction}\r\n          />\r\n          <Buttons\r\n            name=\"credit\"\r\n            buttonContent={buttonContent.credit}\r\n            value1=\"View Credits\"\r\n            value2=\"Close\"\r\n            fetchAction={fetchCreditTransaction}\r\n          />\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    width: \"10rem\",\r\n    color: \"#ff0080\",\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n      backgroundColor: \"#ff0080\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SendMoney({\r\n  senderInfo,\r\n  sendMoney,\r\n  viewUsersList,\r\n  usersList,\r\n  logout,\r\n}) {\r\n  const classes = useStyles();\r\n  const [transferFormData, setTransferFormData] = useState({\r\n    benAcctNum: \"\",\r\n    benFullName: \"\",\r\n    amount: \"\",\r\n    narration: \"\",\r\n  });\r\n  const [buttonContent] = useState(false);\r\n  const [goToDashboard, setGoToDashboard] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const list = document.getElementById(\"usersList\");\r\n    list.innerHTML = \"\";\r\n    if (usersList.length !== 0) {\r\n      usersList.forEach((entry, index) => {\r\n        list.innerHTML += `<div key=${index} class=\"card transactionContainer mb-3\" style=\"width: 18rem\">\r\n            <ul class=\"list-group transactionList\">\r\n              <li class=\"list-group-item\">Name: ${entry.name}</li>\r\n              <li class=\"list-group-item\">AccountNumber: 0${entry.accountNumber}</li>\r\n            </ul>\r\n          </div>`;\r\n      });\r\n      list.style.display = \"block\";\r\n    } else {\r\n      list.style.display = \"none\";\r\n    }\r\n  }, [usersList]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    setTransferFormData((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  const TransferMoney = (e) => {\r\n    e.preventDefault();\r\n    if (transferFormData.benAcctNum === \"\" || transferFormData.amount === \"\") {\r\n      toast.error(\"Beneficiary name and amount cannot be empty.\", {\r\n        autoClose: 3000,\r\n      });\r\n      return false;\r\n    }\r\n    if (senderInfo.accountBalance < transferFormData.amount) {\r\n      toast.error(\"Insufficient funds\", {\r\n        autoClose: false,\r\n      });\r\n      return false;\r\n    }\r\n    const dataToSend = {\r\n      senderId: senderInfo._id,\r\n      receipient: { ...transferFormData },\r\n    };\r\n    const status = sendMoney(dataToSend);\r\n    if (status) {\r\n      toast.success(\"Transfer Successful\");\r\n      setGoToDashboard(true);\r\n    }\r\n  };\r\n\r\n  const viewList = () => {\r\n    // setButtonContent(!buttonContent);\r\n    viewUsersList();\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-xs-12\" id=\"sendMoney\">\r\n      {goToDashboard && <Redirect to=\"/accoutDashBoard\" />}\r\n      <Header handleLogOut={logout} />\r\n      <h2>Transfer Funds</h2>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"number\"\r\n            name=\"benAcctNum\"\r\n            className=\"form-control\"\r\n            placeholder=\"Destination Account Number\"\r\n            value={transferFormData.benAcctNum}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"benFullName\"\r\n            className=\"form-control\"\r\n            placeholder=\"Receipient Account Name\"\r\n            value={transferFormData.benFullName}\r\n            readOnly\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            className=\"form-control\"\r\n            placeholder=\"Amount to transfer\"\r\n            value={transferFormData.amount}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"narration\"\r\n            className=\"form-control\"\r\n            placeholder=\"Narration\"\r\n            value={transferFormData.narration}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"action-items\">\r\n          <Button\r\n            name=\"credit\"\r\n            variant=\"contained\"\r\n            className={classes.button}\r\n            type=\"submit\"\r\n            onClick={TransferMoney}\r\n            size=\"large\"\r\n          >\r\n            Transfer\r\n          </Button>\r\n        </div>\r\n      </form>\r\n      <br />\r\n      <Button\r\n        name=\"credit\"\r\n        variant=\"contained\"\r\n        className={classes.button}\r\n        onClick={viewList}\r\n        size=\"large\"\r\n      >\r\n        {!buttonContent ? \"View All Users\" : \"Close\"}\r\n      </Button>\r\n\r\n      <br />\r\n      <div id=\"usersList\" style={{ display: \"none\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport Signup from \"./SignUp\";\r\nimport Dashboard from \"./AccountDashboard\";\r\nimport SendMoney from \"./SendMoney\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  postLogin,\r\n  postLogout,\r\n  postTransferMoney,\r\n  postSignUp,\r\n  viewRegisteredUsers,\r\n} from \"../redux/actions/actions\";\r\n\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nfunction MainPage({\r\n  login,\r\n  sendMoney,\r\n  loggedInClient,\r\n  signup,\r\n  logout,\r\n  viewUserList,\r\n  usersList,\r\n}) {\r\n  const handleLogOut = () => {\r\n    logout();\r\n    toast.success(\"You've been logged out successfully.\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={true}\r\n      />\r\n      <div className=\"row\">\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/login\" component={() => <Login login={login} />} />\r\n            <Route\r\n              path=\"/signup\"\r\n              component={() => <Signup signup={signup} />}\r\n            />\r\n            <Route\r\n              path=\"/sendMoney\"\r\n              component={() => (\r\n                <SendMoney\r\n                  sendMoney={sendMoney}\r\n                  viewUsersList={viewUserList}\r\n                  senderInfo={loggedInClient.clientData}\r\n                  usersList={usersList}\r\n                  logout={handleLogOut}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/accoutDashBoard\"\r\n              component={() => (\r\n                <Dashboard\r\n                  info={loggedInClient.clientData}\r\n                  logout={handleLogOut}\r\n                />\r\n              )}\r\n            />\r\n            <Route path=\"/\" exact component={() => <Login login={login} />} />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (data) => dispatch(postLogin(data)),\r\n  sendMoney: (info) => dispatch(postTransferMoney(info)),\r\n  signup: (data) => dispatch(postSignUp(data)),\r\n  logout: () => dispatch(postLogout()),\r\n  viewUserList: () => dispatch(viewRegisteredUsers()),\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedInClient: state.loggedInClient,\r\n    usersList: state.updateClientListDataReducer,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\r\n","import React from \"react\";\nimport Main from \"./MainPage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div id=\"cont\" className=\"container\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport loggedInClient from \"./clientreducers\";\r\nimport updateClientListDataReducer from \"./clientListReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  loggedInClient,\r\n  updateClientListDataReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as actionTypes from \"../actionTypes\";\r\nimport { initialClientState } from \"./initialState\";\r\n\r\nexport default function updateClientDataReducer(\r\n  state = {\r\n    clientData: initialClientState,\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CLIENT_INFO:\r\n      return { ...state, clientData: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"../actionTypes\";\r\nimport { initialClientList } from \"./initialState\";\r\n\r\nexport default function updateClientListDataReducer(\r\n  state = initialClientList,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CLIENT_LIST:\r\n      return [...action.payload];\r\n\r\n    case actionTypes.REMOVE_CLIENT_LIST:\r\n      return initialClientList;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./components/App\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { maintainSession } from \"./components/utils\";\n\nexport const store = configureStore();\n\nmaintainSession();\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\n\r\nexport default function configureStore(initialStore) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //add support for Redux dev tools\r\n  return createStore(\r\n    rootReducer,\r\n    initialStore,\r\n    composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}